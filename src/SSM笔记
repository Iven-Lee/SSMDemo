SSM整合开发。
 SSM： SpringMVC + Spring + MyBatis.

 SpringMVC:视图层，界面层，负责接收请求，显示处理结果的。
 Spring：业务层，管理service，dao，工具类对象的。
 MyBatis：持久层， 访问数据库的

 用户发起请求--SpringMVC接收--Spring中的Service对象--MyBatis处理数据

 SSM整合也叫做SSI (IBatis也就是mybatis的前身)， 整合中有容器。
    1.第一个容器SpringMVC容器， 管理Controller控制器对象的。
    2.第二个容器Spring容器，管理Service，Dao,工具类对象的
      我们要做的把使用的对象交给合适的容器创建，管理。 把Controller还有web开发的相关对象
    交给springmvc容器， 这些web用的对象写在springmvc配置文件中

        service，dao对象定义在spring的配置文件中，让spring管理这些对象。
        1）springmvc容器和spring容器是有关系的，关系已经确定好了
        2）springmvc容器是spring容器的子容器， 类似java中的继承。 子可以访问父的内容
        3)在子容器中的Controller可以访问父容器中的Service对象， 就可以实现controller使用service对象



 实现步骤：
    0.使用springdb的mysql库， 使用t_users.frm（Navicat）
                  CREATE TABLE t_users(
                    userId int  primary key auto_increment, #用户编号
                    userName varchar(50),    #用户名称
                    pword varchar(50),    #用户密码
                    sex      char(1),        #用户性别 '男' 或则 '女'
                    email    varchar(50)     #用户邮箱
                  )
    1.新建maven web项目
    2.加入依赖
          1）测试依赖：junit
          2）springmvc依赖：spring-webmvc
          3）springmvc事务依赖：spring-tx
          4）springmvc事务相关依赖：spring-jdbc
          5）mybatis依赖：mybatis
          6）mybatis和spring集成的依赖：mybatis-spring
          7）mysql驱动依赖：mysql-connector-java
          8）阿里的Druid开源连接池依赖：druid
          9）servlet依赖：javax.servlet-api
          10）jsp依赖：jsp-api
          11）Jason解析依赖：jackson-core、jackson-databind
          12）扫描.properties,.xml 文件：<resource>标签
    3.编写WEB-INF/web.xml配置文件
          1)注册DispatcherServlet
                声明springmvc主配置文件的位置
                目的：1）.创建springmvc容器对象，才能创建Controller类对象。
                     2）.创建的是Servlet，才能接受用户的请求。

          2）注册spring的监听器：ContextLoaderListener
                声明spring主配置文件的位置
                目的：创建spring的容器对象，才能创建service，dao等对象。

          3）注册字符集过滤器，解决post请求乱码的问题

    4.创建对应包
          1）实体类包com.Iven.sqlname：对接SQL数据表
          2）dao类包com.Iven.dao：处理数据，进行CRUD操作
          3）service类包com.Iven.service：作为业务逻辑层，业务实现的功能
          4）Controller类包com.Iven.controller：界面层，负责接收请求，显示处理结果的

    4.写springmvc，spring，mybatis的配置文件
          1）springmvc配置文件：resources/conf/dispatcherServlet.xml
                ---- <component-scan>:声明（界面层）controller和其它web相关的对象
                ---- <bean>:配置视图解析器(prefix/suffix)
                ---- <mvc:annotation-driven />与<mvc:default-servlet-handler/>：声明注解驱动（响应ajax请求，返回json/解决静态资源访问问题)

          2）spring配置文件：resources/conf/applicationContext.xml
                ---- <property-placeholder>:声明用到的properties配置文件
                ---- <bean id="dataSource">:声明数据源，连接数据库(url、username、password)
                ---- <bean id="sqlSessionFactory">:创建SqlSessionFactory，声明mybatis配置文件
                ---- <bean MapperScannerConfigurer>:声明mybatis的扫描器，创建dao对象
                ---- <component-scan>:声明service的注解@Service所在的包名位置

          3）mybatis主配置文件：resources/conf/mybatis.xml
                ---- <typeAliases>:声明实体类所在的包名(com.Iven.sqlname)
                ---- <mappers>:声明sql映射文件的位置(com.Iven.dao)

          4）数据库的属性配置文件：resources/conf/jdbc.properties
                ---- jdbc.url =
                ---- jdbc.username =
                ---- jdbc.password =

    6.编写代码:
            1)编写数据库的实体类：（com.Iven.sqlname）SqlName.java
            2)编写dao接口和对应mapper文件（CRUD操作数据表）：（com.Iven.dao）StudentDao.java和StudentDao.xml
            3)编写service接口及其实现类（做业务逻辑层）：
                             接口：（com.Iven.service）StudentService.java
                             实现类：(com.Iven.service.impl)StudentServiceImpl.java----需要使用@Service注解创建对象
            4)编写controller类（做界面层）：
                            （com.Iven.controller）StudentController.java----需要使用@Controller注解创建对象
                             实现两个方法访问：
                                    addStudent（）注册学生流程----index.jsp发起请求、springmvc跳转、addStudent.jsp注册页面、springmvc获取结果跳转、WEB-INF/jsp/result.jsp展示
                                    queryStudent()处理查询，响应ajax流程----index.jsp发起请求、springmvc跳转、listStudent.jsp采用Ajax展示

    7.编写jsp页面:（WEB-INF目录下的动态资源文件受保护）
            1)index.jsp----功能入口
            2)addStudent.jsp----注册入口（添加）
            3）WEB-INF/jsp/result.jsp----注册结果显示页面
            4)listStudent.jsp----ajax方式显示数据入口（查询）

    注：做Ajax需要添加jQuery驱动(jquery-3.4.1.js属于静态资源文件)：webapp/js/jquery-3.4.1.js
